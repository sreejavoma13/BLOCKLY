openapi: 3.0.0
info:
  title: My Project API
  version: 1.0.0
  description: API documentation for all routes (Auth, Pages, Share, Trash, Users)
servers:
  - url: http://localhost:5000/api
    description: Local server

paths:
  /signup:
    post:
      summary: Register a new user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User created successfully
        '400':
          description: Bad request

  /login:
    post:
      summary: Login user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
        '401':
          description: Unauthorized

  /check-user:
    post:
      summary: Check if a user exists and validate password
      tags:
        - Check
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User exists and password matches
        '404':
          description: User not found
        '401':
          description: Invalid credentials

  /pages:
    post:
      summary: Create a new page
      tags:
        - Pages
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
      responses:
        '201':
          description: Page created successfully
        '500':
          description: Server error

  /pages/{userId}:
    get:
      summary: Get all pages for a user
      tags:
        - Pages
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of pages

  /pages/{userId}/{pageId}:
    put:
      summary: Update a page
      tags:
        - Pages
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: pageId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
      responses:
        '200':
          description: Page updated successfully

  /pages/trash/{userId}/{pageId}:
    patch:
      summary: Move page to trash
      tags:
        - Pages
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: pageId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Page moved to trash

  /trash/{userid}:
    delete:
      summary: Empty trash for a user
      tags:
        - Trash
      security:
        - bearerAuth: []
      parameters:
        - name: userid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Trash emptied successfully

  /share/{pageId}:
    post:
      summary: Generate share links for a page
      tags:
        - Share
      parameters:
        - name: pageId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Share links generated successfully

  /profile:
    get:
      summary: Get current user profile
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Returns user profile
        '404':
          description: User not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
